{"version":3,"sources":["searchPhotos/index.js","searchPhotos/action.js","config.js","hidePhotos/index.js","hidePhotos/action.js","sidebar/index.js","photosList/reducer.js","reducer.js","rootReducer.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Searchphotos","props","handleonChange","e","setState","searchquery","target","value","handleSubmit","preventDefault","getsearchPhotos","state","unlike","photo","unLike","shortDescription","description","wordArray","split","length","forEach","word","searchPhotos","this","photos","unlikedPhotos","unlikePhoto","filter","id","console","log","className","style","display","justifyContent","width","onSubmit","margin","InputGroup","FormControl","placeholder","aria-describedby","name","onChange","Append","Button","variant","type","Container","map","i","Card","border","padding","Img","height","src","urls","raw","Body","alignItems","fontSize","alt_description","paddingTop","onClick","msg","React","Component","connect","searchphotoslist","searchphotos","unlikephotos","query","dispatch","a","axios","get","res","payload","data","results","error","Hidephotos","removefromhiddenlist","removeHidden","Title","Text","Sidebar","to","initialState","combineReducers","photoslist","action","store","createStore","rootReducer","applyMiddleware","thunk","App","exact","path","component","Searchphotoslist","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.98966633.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport { getsearchPhotos, unLike } from \"./action\";\r\n\r\nimport {\r\n  Card,\r\n  Container,\r\n  Button,\r\n  InputGroup,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nclass Searchphotos extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchquery: \"\",\r\n    };\r\n  }\r\n\r\n  // to handle input change\r\n  handleonChange = (e) => {\r\n    this.setState({\r\n      searchquery: e.target.value,\r\n    });\r\n  };\r\n\r\n  //to handle search submit\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.getsearchPhotos(this.state.searchquery);\r\n    this.setState({\r\n      searchquery: \"\",\r\n    });\r\n  };\r\n\r\n  //function to handle unlike\r\n  unlike = (photo) => {\r\n    this.props.unLike(photo);\r\n  };\r\n\r\n  /**\r\n   * function to return short description\r\n   * @param description sentence\r\n   * @return shortDescription\r\n   */\r\n  shortDescription = (description) => {\r\n    let shortDescription = \"\";\r\n    let wordArray = description.split(\" \");\r\n    if (wordArray.length > 2) {\r\n      shortDescription = wordArray[0] + \" \" + wordArray[1] + \" ...\";\r\n    } else {\r\n      wordArray.forEach((word) => {\r\n        shortDescription = shortDescription + word + \" \";\r\n      });\r\n    }\r\n    return shortDescription;\r\n  };\r\n\r\n  render() {\r\n    let searchPhotos = this.props.photos;\r\n\r\n    let unlikedPhotos = this.props.unlikedPhotos;\r\n\r\n    if (unlikedPhotos.length) {\r\n      unlikedPhotos.forEach((unlikePhoto) => {\r\n        searchPhotos = searchPhotos.filter(\r\n          (photo) => photo.id !== unlikePhoto.id\r\n        );\r\n      });\r\n    }\r\n\r\n    console.log(searchPhotos);\r\n\r\n    return (\r\n      <div className='main'>\r\n        <div\r\n          className='search-container'\r\n          style={{ display: \"flex\", justifyContent: \"center\", width: \"90%\" }}\r\n        >\r\n          <form\r\n            onSubmit={this.handleSubmit}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              width: \"50%\",\r\n              margin: \"2rem\",\r\n            }}\r\n          >\r\n            <InputGroup className='mb-3'>\r\n              <FormControl\r\n                placeholder='Search pictures on unsplash...'\r\n                aria-describedby='basic-addon2'\r\n                name='searchquery'\r\n                value={this.state.searchquery}\r\n                onChange={(e) => this.handleonChange(e)}\r\n              />\r\n              <InputGroup.Append>\r\n                <Button variant='info' type='submit'>\r\n                  Search\r\n                </Button>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </form>\r\n        </div>\r\n\r\n        <Container className='container-grid' style={{ width: \"90%\" }}>\r\n          {searchPhotos.length > 0 ? (\r\n            searchPhotos.map((photo, i) => {\r\n              return (\r\n                <Card\r\n                  border='dark'\r\n                  className='text-center'\r\n                  style={{ width: \"18rem\", padding: \"5px\" }}\r\n                >\r\n                  <Card.Img\r\n                    variant='top'\r\n                    style={{ width: \"100%\", height: \"300px\" }}\r\n                    src={photo.urls.raw}\r\n                  />\r\n                  <Card.Body\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-around\",\r\n                      alignItems: \"center\",\r\n                      fontSize: \"16px\",\r\n                    }}\r\n                  >\r\n                    {photo.description\r\n                      ? this.shortDescription(photo.description)\r\n                      : this.shortDescription(photo.alt_description)}\r\n                    <i\r\n                      className='fas fa-thumbs-down'\r\n                      style={{ paddingTop: \"3px\" }}\r\n                      onClick={() => this.unlike(photo)}\r\n                    ></i>\r\n                  </Card.Body>\r\n                </Card>\r\n              );\r\n            })\r\n          ) : (\r\n            <div>{this.props.msg}</div>\r\n          )}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapSTateToProps = (state) => ({\r\n  photos: state.searchphotoslist.searchphotos,\r\n  msg: state.searchphotoslist.msg,\r\n  unlikedPhotos: state.searchphotoslist.unlikephotos,\r\n});\r\n\r\nexport default connect(mapSTateToProps, { getsearchPhotos, unLike })(\r\n  Searchphotos\r\n);\r\n","import axios from \"axios\";\r\nimport { ClientId } from \"../config\";\r\n\r\nexport const getsearchPhotos = (query) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\r\n      `https://api.unsplash.com/search/photos?query=${query}&client_id=${ClientId}`\r\n    );\r\n    console.log(res);\r\n    dispatch({\r\n      type: \"GET_SEARCHPHOTOS\",\r\n      payload: res.data.results,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  console.log(\"getsearchPhotos action called\");\r\n};\r\n\r\nexport const unLike = (photo) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: \"UNLIKE_PHOTO\",\r\n      payload: photo,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  console.log(\"unlikePhotos action called\");\r\n};\r\n","export const ClientId = \"yIO_P0xIVw6q8opfNqyFdf4NHSnfXxKTA3a1oF5yPCQ\";\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { removeHidden } from \"./action\";\r\n\r\nclass Hidephotos extends React.Component {\r\n  // function to remove photo from unliked list\r\n  removefromhiddenlist = (photo) => {\r\n    this.props.removeHidden(photo);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='main'>\r\n        <div\r\n          style={{ display: \"flex\", justifyContent: \"center\", width: \"90%\" }}\r\n        >\r\n          <h2> Unliked Photos</h2>\r\n        </div>\r\n        <Container className='container-grid' style={{ width: \"90%\" }}>\r\n          {this.props.unlikephotos.length > 0 ? (\r\n            this.props.unlikephotos.map((photo) => (\r\n              <Card\r\n                border='dark'\r\n                className='text-center'\r\n                style={{ width: \"18rem\", padding: \"5px\" }}\r\n              >\r\n                <Card.Img\r\n                  variant='top'\r\n                  style={{ width: \"100%\", height: \"300px\" }}\r\n                  src={photo.urls.raw}\r\n                />\r\n                <Card.Body\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-around\",\r\n                    alignItems: \"center\",\r\n                    fontSize: \"16px\",\r\n                  }}\r\n                >\r\n                  <Card.Title></Card.Title>\r\n                  <Card.Text>\r\n                    {photo.description\r\n                      ? photo.description\r\n                      : photo.alt_description}\r\n                  </Card.Text>\r\n                  <Button\r\n                    variant='secondary'\r\n                    onClick={() => this.removefromhiddenlist(photo)}\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            ))\r\n          ) : (\r\n            <div>No Unliked Photos</div>\r\n          )}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  unlikephotos: state.searchphotoslist.unlikephotos,\r\n});\r\nexport default connect(mapStateToProps, { removeHidden })(Hidephotos);\r\n","export const removeHidden = (photo) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: \"REMOVE_UNLIKE\",\r\n      payload: photo,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  console.log(\"unlikePhotos action called\");\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Sidebar extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className='sidenav'>\r\n        <Link to='/searchphotos'>Search </Link>\r\n\r\n        <Link to='/unlikedphotos'>Unliked </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","const initialState = {\r\n  photos: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"GET_PHOTOS\":\r\n      return {\r\n        ...state,\r\n        photos: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  searchphotos: [],\r\n  unlikephotos: [],\r\n  msg: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"GET_SEARCHPHOTOS\":\r\n      return {\r\n        ...state,\r\n        searchphotos: action.payload,\r\n        msg: action.payload.length > 0 ? \"\" : \"No Photos Found\",\r\n      };\r\n\r\n    case \"UNLIKE_PHOTO\":\r\n      return {\r\n        ...state,\r\n        unlikephotos: [action.payload, ...state.unlikephotos],\r\n      };\r\n    case \"REMOVE_UNLIKE\":\r\n      return {\r\n        ...state,\r\n        unlikephotos: state.unlikephotos.filter(\r\n          (photo) => photo.id !== action.payload.id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport photoslist from \"./photosList/reducer\";\r\nimport searchphotoslist from \"./reducer\";\r\n\r\nexport default combineReducers({\r\n  photoslist,\r\n  searchphotoslist,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Searchphotoslist from \"../src/searchPhotos\";\nimport Hidephotos from \"../src/hidePhotos\";\nimport Sidebar from \"../src/sidebar\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Sidebar />\n\n        <Route exact path='/' component={Searchphotoslist} />\n        <Switch>\n          <Route exact path='/unlikedphotos' component={Hidephotos} />\n          <Route exact path='/searchphotos' component={Searchphotoslist} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}